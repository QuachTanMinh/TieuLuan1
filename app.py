import streamlit as st
import cv2
import numpy as np
from PIL import Image

st.title("Demo x·ª≠ l√Ω ·∫£nh v·ªõi OpenCV üé®")

# Upload ·∫£nh
uploaded_file = st.file_uploader("T·∫£i ·∫£nh l√™n", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    # ƒê·ªçc ·∫£nh b·∫±ng PIL r·ªìi chuy·ªÉn sang OpenCV
    image = Image.open(uploaded_file)
    img = np.array(image)
    img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)  # gi·ªØ chu·∫©n BGR cho x·ª≠ l√Ω

    # Hi·ªÉn th·ªã ·∫£nh g·ªëc (chuy·ªÉn sang RGB khi show)
    st.image(cv2.cvtColor(img, cv2.COLOR_BGR2RGB), caption="·∫¢nh g·ªëc", use_container_width=True)

    st.subheader("Ch·ªçn lo·∫°i x·ª≠ l√Ω ·∫£nh")

    option = st.selectbox(
        "Ch·ªçn m·ªôt b·ªô l·ªçc:",
        ("Gi·ªØ nguy√™n", "L√†m m·ªù Gaussian", "L√†m s·∫Øc n√©t", "Canny Edge Detection")
    )

    # X·ª≠ l√Ω theo l·ª±a ch·ªçn
    if option == "Gi·ªØ nguy√™n":
        result = img
    elif option == "L√†m m·ªù Gaussian":
        result = cv2.GaussianBlur(img, (15, 15), 0)
    elif option == "L√†m s·∫Øc n√©t":
        kernel = np.array([[0, -1, 0], [-1, 5, -1], [0, -1, 0]])
        result = cv2.filter2D(img, -1, kernel)
    elif option == "Canny Edge Detection":
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        result = cv2.Canny(gray, 100, 200)
        # ·∫£nh Canny l√† grayscale ‚Üí show tr·ª±c ti·∫øp
        st.image(result, caption="·∫¢nh sau x·ª≠ l√Ω (Canny)", use_container_width=True)
        result = None  # tr√°nh show th√™m b√™n d∆∞·ªõi

    # Hi·ªÉn th·ªã ·∫£nh k·∫øt qu·∫£ (n·∫øu c√≤n gi·ªØ m√†u)
    if result is not None:
        st.image(cv2.cvtColor(result, cv2.COLOR_BGR2RGB),
                 caption=f"·∫¢nh sau x·ª≠ l√Ω: {option}", use_container_width=True)
